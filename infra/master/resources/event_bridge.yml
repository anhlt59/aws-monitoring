MonitoringEventBus:
  Type: AWS::Events::EventBus
  Properties:
    Name: ${self:service}-${self:provider.stage}-MonitoringEventBus
    Description: Custom EventBus for monitoring events v1.0.1
    Policy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Sid": "AllowLambdaToPutEvents",
            "Effect": "Allow",
            "Principal": {
              "AWS": "*"
            },
            "Action": "events:PutEvents",
            "Resource": "*"
          }
        ]
      }

MonitoringEventRule:
  Type: AWS::Events::Rule
  Properties:
    Name: "${self:service}-MonitoringEventRule"
    Description: Rule to handle monitoring events from various sources v1.0.1
    EventBusName: !Ref MonitoringEventBus
    EventPattern: |
      {
        "source": [
          "aws.cloudwatch",
          "aws.guardduty",
          "aws.health",
          "monitoring.agent.cloudwatch",
          "monitoring.agent.guardduty",
          "monitoring.agent.health",
          "monitoring.agent.logs"
        ]
      }
    State: "ENABLED"
    Targets:
      - Arn: !GetAtt HandleMonitoringEventsLambdaFunction.Arn
        Id: "${self:service}-EventHandler"
        RoleArn: !GetAtt EventBridgeRole.Arn
        DeadLetterConfig:
          Arn: !GetAtt MonitoringEventRuleDLQ.Arn

AgentDeploymentEventRule:
  Type: AWS::Events::Rule
  Properties:
    Name: "${self:service}-AgentDeploymentEventRule"
    Description: Rule to handle cloudformation deployment events v1.0.1
    EventBusName: !Ref MonitoringEventBus
    EventPattern: |
      {
        "source": ["aws.cloudformation"],
        "detail-type": ["CloudFormation Stack Status Change"],
        "detail": {
          "stack-id": [{ "wildcard": "*stack/monitoring-agent*"}]
        }
      }
    State: ENABLED
    Targets:
      - Arn: !GetAtt UpdateAgentDeploymentLambdaFunction.Arn
        Id: "${self:service}-EventHandler"
        RoleArn: !GetAtt EventBridgeRole.Arn
        DeadLetterConfig:
          Arn: !GetAtt MonitoringEventRuleDLQ.Arn

MasterDeploymentEventRule:
  Type: AWS::Events::Rule
  Properties:
    Name: "${self:service}-MasterDeploymentEventRule"
    Description: Rule to handle cloudformation deployment events v1.0.1
    EventBusName: default
    EventPattern: |
      {
        "source": ["aws.cloudformation"],
        "detail-type": ["CloudFormation Stack Status Change"],
        "detail": {
          "stack-id": [{ "wildcard": "*stack/monitoring-master*"}]
        }
      }
    State: ENABLED
    Targets:
      - Arn: !GetAtt UpdateAgentDeploymentLambdaFunction.Arn
        Id: "${self:service}-EventHandler"
        RoleArn: !GetAtt EventBridgeRole.Arn
        DeadLetterConfig:
          Arn: !GetAtt MonitoringEventRuleDLQ.Arn
