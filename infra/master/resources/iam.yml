LambdaFunctionRole:
  Type: AWS::IAM::Role
  Properties:
    RoleName: ${self:service}-${self:provider.stage}-LambdaFunctionRole
    AssumeRolePolicyDocument:
      Version: "2012-10-17"
      Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
    ManagedPolicyArns:
      - !Ref LambdaFunctionPolicy

LambdaFunctionPolicy:
  Type: AWS::IAM::ManagedPolicy
  Properties:
    ManagedPolicyName: ${self:service}-${self:provider.stage}-LambdaFunctionPolicy
    PolicyDocument:
      Version: "2012-10-17"
      Statement:
        - Sid: AllowCloudwatchLogs
          Effect: Allow
          Action:
            - logs:CreateLogStream
            - logs:CreateLogGroup
            - logs:PutLogEvents
          Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/teligent*:*"
        - Sid: AllowSendMessagesToSQS
          Effect: Allow
          Action:
            - sqs:Get*
            - sqs:SendMessage
            - sqs:ReceiveMessage
            - sqs:DeleteMessage
            - sqs:ChangeMessageVisibility
          Resource: !Sub "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:teligent*"
        - Sid: AllowAccessDynamoDB
          Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Get*
            - dynamodb:List*
            - dynamodb:BatchGet*
            - dynamodb:BatchWrite*
            - dynamodb:Describe*
            - dynamodb:PutItem
            - dynamodb:DeleteItem
            - dynamodb:UpdateItem
          Resource:
            - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*"

# EventBridgeRole, that allows the Lambda function to be triggered by EventBridge events
EventBridgeRole:
  Type: AWS::IAM::Role
  Properties:
    RoleName: ${self:service}-${self:provider.stage}-EventBridgeRole
    AssumeRolePolicyDocument:
      Version: "2012-10-17"
      Statement:
        - Effect: Allow
          Principal:
            Service: events.amazonaws.com
          Action: sts:AssumeRole
    ManagedPolicyArns:
      - !Ref EventBridgePolicy

EventBridgePolicy:
  Type: AWS::IAM::ManagedPolicy
  Properties:
    ManagedPolicyName: ${self:service}-${self:provider.stage}-EventBridgePolicy
    PolicyDocument:
      Version: "2012-10-17"
      Statement:
        - Sid: AllowPublishEvents
          Effect: Allow
          Action:
            - events:PutEvents
          Resource: "*"
