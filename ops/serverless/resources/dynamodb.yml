# DynamoDb table
# ------------------------------------------------------------------------------
DynamoDBTable:
  Type: AWS::DynamoDB::Table
  DeletionPolicy: Retain
  UpdateReplacePolicy: Retain
  Properties:
    AttributeDefinitions:
      - AttributeName: IMEI
        AttributeType: S
      - AttributeName: sensor_time
        AttributeType: S
    KeySchema:
      - AttributeName: IMEI
        KeyType: HASH
      - AttributeName: sensor_time
        KeyType: RANGE
    BillingMode: ${self:custom.DynamoDB.BillingMode}
    ProvisionedThroughput:
      ReadCapacityUnits: ${self:custom.DynamoDB.RCU}
      WriteCapacityUnits: ${self:custom.DynamoDB.WCU}
    # SSESpecification:
    #   SSEEnabled: true
    #   SSEType: KMS
    StreamSpecification:
      StreamViewType: NEW_IMAGE
    PointInTimeRecoverySpecification:
      PointInTimeRecoveryEnabled: true
    TimeToLiveSpecification:
      AttributeName: expired_at
      Enabled: true
    TableName: ${self:service}-${self:provider.stage}


# Auto Scaling
# ------------------------------------------------------------------------------
ScalingRole:
  Type: AWS::IAM::Role
  Condition: AutoScaleCondition
  Properties:
    RoleName: ${self:service}-${self:provider.stage}-ScalingRole
    AssumeRolePolicyDocument:
      Version: "2012-10-17"
      Statement:
        - Effect: Allow
          Principal:
            Service:
              - application-autoscaling.amazonaws.com
          Action:
            - sts:AssumeRole
    Path: "/"
    Policies:
      - PolicyName: root
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:DescribeTable
                - dynamodb:UpdateTable
                - cloudwatch:PutMetricAlarm
                - cloudwatch:DescribeAlarms
                - cloudwatch:GetMetricStatistics
                - cloudwatch:SetAlarmState
                - cloudwatch:DeleteAlarms
              Resource: "*" # TODO restrict arn
    Tags:
      - Key: Owner
        Value: ${self:service}
      - Key: Environment
        Value: ${self:provider.stage}

WriteScalingPolicy:
  Type: AWS::ApplicationAutoScaling::ScalingPolicy
  Condition: AutoScaleCondition
  Properties:
    PolicyName: ${self:service}-${self:provider.stage}-WriteAutoScalingPolicy
    PolicyType: TargetTrackingScaling
    ScalingTargetId: !Ref WriteCapacityScalableTarget
    TargetTrackingScalingPolicyConfiguration:
      TargetValue: ${self:custom.DynamoDB.AutoScale.TargetUtilization}
      PredefinedMetricSpecification:
        PredefinedMetricType: DynamoDBWriteCapacityUtilization

ReadScalingPolicy:
  Type: AWS::ApplicationAutoScaling::ScalingPolicy
  Condition: AutoScaleCondition
  Properties:
    PolicyName: ${self:service}-${self:provider.stage}-ReadAutoScalingPolicy
    PolicyType: TargetTrackingScaling
    ScalingTargetId: !Ref ReadCapacityScalableTarget
    TargetTrackingScalingPolicyConfiguration:
      TargetValue: ${self:custom.DynamoDB.AutoScale.TargetUtilization}
      PredefinedMetricSpecification:
        PredefinedMetricType: DynamoDBReadCapacityUtilization

WriteCapacityScalableTarget:
  Type: AWS::ApplicationAutoScaling::ScalableTarget
  Condition: AutoScaleCondition
  Properties:
    MaxCapacity: ${self:custom.DynamoDB.AutoScale.WCU.max}
    MinCapacity: ${self:custom.DynamoDB.AutoScale.WCU.min}
    ResourceId: !Sub table/${DynamoDBTable}
    RoleARN: !GetAtt ScalingRole.Arn
    ScalableDimension: dynamodb:table:WriteCapacityUnits
    ServiceNamespace: dynamodb

ReadCapacityScalableTarget:
  Type: AWS::ApplicationAutoScaling::ScalableTarget
  Condition: AutoScaleCondition
  Properties:
    MaxCapacity: ${self:custom.DynamoDB.AutoScale.RCU.max}
    MinCapacity: ${self:custom.DynamoDB.AutoScale.RCU.min}
    ResourceId: !Sub table/${DynamoDBTable}
    RoleARN: !GetAtt ScalingRole.Arn
    ScalableDimension: dynamodb:table:ReadCapacityUnits
    ServiceNamespace: dynamodb
